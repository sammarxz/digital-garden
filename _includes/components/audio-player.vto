<div class="audio-player">
  <audio id="{{ id }}" src="{{ src }}" preload="metadata"></audio>
  <button class="audio-play-btn" onclick="togglePlay('{{ id }}')" aria-label="Play/Pause">
    <span class="play-icon">▶</span>
    <span class="pause-icon" style="display: none;">⏸</span>
  </button>
  <div class="audio-info">
    <span class="audio-time">
      <span class="current-time">0:00</span> / <span class="duration">0:00</span>
    </span>
  </div>
  <div class="audio-progress">
    <div class="audio-progress-bar" id="{{ id }}-progress"></div>
  </div>
</div>

<script>
(function() {
  const audio = document.getElementById('{{ id }}');
  const playBtn = audio.parentElement.querySelector('.audio-play-btn');
  const playIcon = playBtn.querySelector('.play-icon');
  const pauseIcon = playBtn.querySelector('.pause-icon');
  const currentTimeEl = audio.parentElement.querySelector('.current-time');
  const durationEl = audio.parentElement.querySelector('.duration');
  const progressBar = document.getElementById('{{ id }}-progress');
  const progressContainer = audio.parentElement.querySelector('.audio-progress');

  window.togglePlay = function(id) {
    if (id !== '{{ id }}') return;

    if (audio.paused) {
      audio.play();
      playIcon.style.display = 'none';
      pauseIcon.style.display = 'inline';
    } else {
      audio.pause();
      playIcon.style.display = 'inline';
      pauseIcon.style.display = 'none';
    }
  };

  function formatTime(seconds) {
    const mins = Math.floor(seconds / 60);
    const secs = Math.floor(seconds % 60);
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  }

  audio.addEventListener('loadedmetadata', () => {
    durationEl.textContent = formatTime(audio.duration);
  });

  audio.addEventListener('timeupdate', () => {
    currentTimeEl.textContent = formatTime(audio.currentTime);
    const progress = (audio.currentTime / audio.duration) * 100;
    progressBar.style.width = progress + '%';
  });

  audio.addEventListener('ended', () => {
    playIcon.style.display = 'inline';
    pauseIcon.style.display = 'none';
  });

  progressContainer.addEventListener('click', (e) => {
    const rect = progressContainer.getBoundingClientRect();
    const percent = (e.clientX - rect.left) / rect.width;
    audio.currentTime = percent * audio.duration;
  });
})();
</script>
